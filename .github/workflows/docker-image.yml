name: Docker Image CI

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Add branch to env
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@3d58c274f17dffee475a5520cbe67f0a882c4dbb
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v4
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - name: Dotenv Action^
        id: dotenv
        uses: falti/dotenv-action@v1.0.4
        with:
          log-variables: NEXTCLOUD_VERSION

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@879dcbb708d40f8b8679d4f7941b938a086e23a7
        with:
          images: |
            maximilianpohle/nextcloud
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{ NEXTCLOUD_VERSION }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern=${{ env.BRANCH }}
            type=sha

      - name: Build and push Docker images
        uses: docker/build-push-action@fdf7f43ecf7c1a5c7afe936410233728a8c2d9c2
        with:
          push: true
          build-args: |
            NEXTCLOUD_VERSION=${{ steps.dotenv.outputs.nextcloud_version }}
          cache-from: type=registry,ref=maximilianpohle/docker-alpine-nginx-modsec:${{ env.BRANCH }}
          cache-to: type=inline
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
